version: '2'
services:
  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    image: vessel/app
    ports:
     - "${DOC_APP_PORT}:80"
    environment:
      CONTAINER_ENV: "${DOC_APP_ENV}"
      XDEBUG_HOST: "${DOC_XDEBUG_HOST}"
      WWWUSER: "${DOC_WWWUSER}"
      PHP_IDE_CONFIG: "serverName=${DOC_PHP_IDE_CONFIG}"
    volumes:
      ## For macOS users (https://wodby.com/stacks/php/docs/local/docker-for-mac/)
      - ./:/var/www/html:cached # User-guided caching
      - docker-sync:/var/www/html # Docker-sync
    networks:
     - vessel
  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
      args:
        uid: "${DOC_USER_ID}"
    image: vessel/node
    user: node
    volumes:
     - .:/var/www/html
    networks:
     - vessel
  mysql:
    image: mysql:5.7
    ports:
     - "${DOC_MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DOC_DB_PASSWORD}"
      MYSQL_DATABASE: "${DOC_DB_DATABASE}"
      MYSQL_USER: "${DOC_DB_USERNAME}"
      MYSQL_PASSWORD: "${DOC_DB_PASSWORD}"
    volumes:
     - vesselmysql:/var/lib/mysql
     # - ./docker/mysql/conf.d:/etc/mysql/conf.d
     # - ./docker/mysql/logs:/var/log/mysql
    networks:
     - vessel
  redis:
    image: redis:alpine
    volumes:
     - vesselredis:/data
    networks:
     - vessel

  # Mail catch
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
    networks:
      - vessel

  # Search
  elasticsearch:
    image: elasticsearch:6.5.4
    volumes:
      - ./.docker/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - vessel

networks:
  vessel:
    driver: "bridge"
volumes:
  vesselmysql:
    driver: "local"
  vesselredis:
    driver: "local"
  # Docker-sync for macOS users
  docker-sync:
    external: true
